//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.02.04 at 03:58:33 PM CET 
//


package it.pjsoft.reactive.generic.transfer.model.msg;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import it.pjsoft.reactive.generic.transfer.model.util.GenericUtil;

/**
 * <p>Java class for jaxbBodyPayload complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="jaxbBodyPayload">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *       &lt;/sequence>
 *       &lt;attribute name="value" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "jaxbBodyPayload")
@XmlRootElement(name="content")
public class JaxbBodyPayload {
	private static final DateFormat dtf = new SimpleDateFormat("yyyy.MM.dd'T'hh:MM:ss");
	private static final DateFormat df = new SimpleDateFormat("yyyy.MM.dd");

    @XmlAttribute(name = "type", required = true)
    protected String type;

    @XmlAttribute(name = "value", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String value;

    
    public JaxbBodyPayload() {

	}

    
	public JaxbBodyPayload(Object value) {
		if(value!=null){
			this.value = value.toString();
			this.type = value.getClass().getSimpleName().toLowerCase();
			if("bigdecimal".equals(this.type) || "biginteger".equals(this.type))
				this.type = "decimal";
			if("date".equals(this.type)){
				this.value = df.format(value);
			}
			if("timestamp".equals(this.type)){
				this.type = "datetime";
				this.value = dtf.format(this.value);
			}
			//TODO: calendars, collections, mappe, arrays
		}
	}


	/**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getValue() {
    	if(value==null)
    		return null;
    	try {
			switch(type){
			case "string": return (String)value;
			case "byte": return Byte.parseByte(value);
			case "short": return Short.parseShort(value);
			case "integer": return Integer.parseInt(value);
			case "long": return Long.parseLong(value);
			case "date": return df.parse(value);
			case "datetime": return dtf.parse(value);
			case "decimal": return new BigDecimal(value);
			//TODO: calendars, collections, mappe, arrays
			}
		} catch (NumberFormatException | ParseException e) {
			return value;
		}
        return value;
    }


	@Override
	public String toString() {
		return GenericUtil.toString(this);
	}
}
